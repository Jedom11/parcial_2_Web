{
	"info": {
		"_postman_id": "e7a1f541-1bbe-40ab-a607-4fd686cb147a",
		"name": "Estudiante Endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27686766"
	},
	"item": [
		{
			"name": "Crear Estudiante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the response schema for the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.property('id');\r",
							"    pm.expect(responseData).to.have.property('cedula');\r",
							"    pm.expect(responseData).to.have.property('nombre');\r",
							"    pm.expect(responseData).to.have.property('correo');\r",
							"    pm.expect(responseData).to.have.property('programa');\r",
							"    pm.expect(responseData).to.have.property('semestre');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"cedula\": 123456789,\r\n    \"nombre\": \"JESED Pérez Actualizado\",\r\n    \"correo\": \"juan.perez.actualizado@example.com\",\r\n    \"programa\": \"Ingeniería de Software\",\r\n    \"semestre\": 6\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/estudiante",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"estudiante"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener Estudiantes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the array of 'estudiante' objects\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"    responseData.forEach(function(estudiante) {\r",
							"        pm.expect(estudiante).to.be.an('object');\r",
							"        pm.expect(estudiante.id).to.be.a('number');\r",
							"        pm.expect(estudiante.cedula).to.be.a('number');\r",
							"        pm.expect(estudiante.nombre).to.be.a('string');\r",
							"        pm.expect(estudiante.correo).to.be.a('string');\r",
							"        pm.expect(estudiante.programa).to.be.a('string');\r",
							"        pm.expect(estudiante.semestre).to.be.a('number');\r",
							"        \r",
							"        pm.expect(estudiante.resenias).to.be.an('array');\r",
							"        estudiante.resenias.forEach(function(resenia) {\r",
							"            pm.expect(resenia).to.be.an('object');\r",
							"            pm.expect(resenia.id).to.be.a('number');\r",
							"            pm.expect(resenia.comentario).to.be.a('string');\r",
							"            pm.expect(resenia.calificacion).to.be.a('number');\r",
							"            pm.expect(resenia.fecha).to.be.a('string');\r",
							"        });\r",
							"        \r",
							"        pm.expect(estudiante.actividades).to.be.an('array');\r",
							"        estudiante.actividades.forEach(function(actividad) {\r",
							"            pm.expect(actividad).to.be.an('object');\r",
							"            pm.expect(actividad.id).to.be.a('number');\r",
							"            pm.expect(actividad.titulo).to.be.a('string');\r",
							"            pm.expect(actividad.fecha).to.be.a('string');\r",
							"            pm.expect(actividad.cupoMaximo).to.be.a('number');\r",
							"            pm.expect(actividad.estado).to.be.a('number');\r",
							"        });\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Each 'estudiante' object has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"    \r",
							"    responseData.forEach(function(estudiante) {\r",
							"        pm.expect(estudiante).to.have.property('id');\r",
							"        pm.expect(estudiante).to.have.property('cedula');\r",
							"        pm.expect(estudiante).to.have.property('nombre');\r",
							"        pm.expect(estudiante).to.have.property('correo');\r",
							"        pm.expect(estudiante).to.have.property('programa');\r",
							"        pm.expect(estudiante).to.have.property('semestre');\r",
							"        pm.expect(estudiante).to.have.property('resenias');\r",
							"        pm.expect(estudiante).to.have.property('actividades');\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the 'resenias' array within each 'estudiante' object\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"    \r",
							"    responseData.forEach(estudiante => {\r",
							"        pm.expect(estudiante.resenias).to.be.an('array');\r",
							"        \r",
							"        estudiante.resenias.forEach(resenia => {\r",
							"            pm.expect(resenia).to.have.property('id');\r",
							"            pm.expect(resenia).to.have.property('comentario');\r",
							"            pm.expect(resenia).to.have.property('calificacion');\r",
							"            pm.expect(resenia).to.have.property('fecha');\r",
							"        });\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/estudiante/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"estudiante",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener Estudiante por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the response schema for required fields\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"\r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.id).to.exist;\r",
							"  pm.expect(responseData.cedula).to.exist;\r",
							"  pm.expect(responseData.nombre).to.exist;\r",
							"  pm.expect(responseData.correo).to.exist;\r",
							"  pm.expect(responseData.programa).to.exist;\r",
							"  pm.expect(responseData.semestre).to.exist;\r",
							"  pm.expect(responseData.resenias).to.exist;\r",
							"  pm.expect(responseData.actividades).to.exist;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/estudiante/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"estudiante",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Inscribirse a una Actividad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.message).to.exist;\r",
							"    pm.expect(responseData.estudiante).to.exist;\r",
							"    pm.expect(responseData.actividad).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Activities is an array\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData.estudiante.actividades).to.be.an('array');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the estudiante object\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.estudiante).to.exist.and.to.be.an('object');\r",
							"    pm.expect(responseData.estudiante.id).to.be.a('number');\r",
							"    pm.expect(responseData.estudiante.nombre).to.be.a('string');\r",
							"    pm.expect(responseData.estudiante.correo).to.be.a('string');\r",
							"    pm.expect(responseData.estudiante.actividades).to.be.an('array');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the actividad object\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.actividad).to.exist.and.to.be.an('object');\r",
							"    pm.expect(responseData.actividad.id).to.be.a('number');\r",
							"    pm.expect(responseData.actividad.titulo).to.be.a('string');\r",
							"    pm.expect(responseData.actividad.fecha).to.be.a('string');\r",
							"    pm.expect(responseData.actividad.inscritos).to.be.an('array');\r",
							"    responseData.actividad.inscritos.forEach(function(inscrito) {\r",
							"        pm.expect(inscrito).to.be.an('object');\r",
							"        pm.expect(inscrito.id).to.be.a('number');\r",
							"        pm.expect(inscrito.cedula).to.be.a('number');\r",
							"        pm.expect(inscrito.nombre).to.be.a('string');\r",
							"        pm.expect(inscrito.correo).to.be.a('string');\r",
							"        pm.expect(inscrito.programa).to.be.a('string');\r",
							"        pm.expect(inscrito.semestre).to.be.a('number');\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"actividadId\": 2,\r\n    \"estudianteId\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/estudiante/inscribir",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"estudiante",
						"inscribir"
					]
				}
			},
			"response": []
		}
	]
}