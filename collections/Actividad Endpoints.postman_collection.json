{
	"info": {
		"_postman_id": "6ffa6fa7-b107-4e9d-bcfc-8bc509e0013d",
		"name": "Actividad Endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27686766"
	},
	"item": [
		{
			"name": "Crear Actividad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.property('id');\r",
							"    pm.expect(responseData).to.have.property('titulo');\r",
							"    pm.expect(responseData).to.have.property('fecha');\r",
							"    pm.expect(responseData).to.have.property('cupoMaximo');\r",
							"    pm.expect(responseData).to.have.property('estado');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Id is a non-negative integer\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData.id).to.be.a('number');\r",
							"    pm.expect(responseData.id).to.be.at.least(0, \"Id should be a non-negative integer\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Fecha is in a valid date format\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.fecha).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"titulo\": \"UNO DOS TRES CUATRO CINCO SEIS\",\r\n    \"fecha\": \"2025-05-10\",\r\n    \"cupoMaximo\": 1,\r\n    \"estado\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/actividad",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"actividad"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener Actividades",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.id).to.exist;\r",
							"    pm.expect(responseData.titulo).to.exist;\r",
							"    pm.expect(responseData.fecha).to.exist;\r",
							"    pm.expect(responseData.cupoMaximo).to.exist;\r",
							"    pm.expect(responseData.estado).to.exist;\r",
							"    pm.expect(responseData.resenias).to.exist;\r",
							"    pm.expect(responseData.inscritos).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Resenias array elements should have id, comentario, calificacion, and fecha\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData.resenias).to.be.an('array');\r",
							"    responseData.resenias.forEach(function(resenia) {\r",
							"        pm.expect(resenia).to.have.property('id').that.is.a('number');\r",
							"        pm.expect(resenia).to.have.property('comentario').that.is.a('string');\r",
							"        pm.expect(resenia).to.have.property('calificacion').that.is.a('number');\r",
							"        pm.expect(resenia).to.have.property('fecha').that.is.a('string');\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate inscritos array elements\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.inscritos).to.be.an('array').and.to.have.length.above(0);\r",
							"\r",
							"    responseData.inscritos.forEach((inscrito) => {\r",
							"        pm.expect(inscrito).to.have.property('id').that.is.a('number');\r",
							"        pm.expect(inscrito).to.have.property('cedula').that.is.a('number');\r",
							"        pm.expect(inscrito).to.have.property('nombre').that.is.a('string');\r",
							"        pm.expect(inscrito).to.have.property('correo').that.is.a('string');\r",
							"        pm.expect(inscrito).to.have.property('programa').that.is.a('string');\r",
							"        pm.expect(inscrito).to.have.property('semestre').that.is.a('number');\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/actividad/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"actividad",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar Estado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required field 'message'\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  pm.expect(responseData).to.have.property('message');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response JSON schema is as expected\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.message).to.exist.and.to.be.a('string');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"estado\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/actividad/estado",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"actividad",
						"estado"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener Actividades seg√∫n Fecha",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the schema for the response\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('array');\r",
							"  responseData.forEach(function(item) {\r",
							"    pm.expect(item).to.have.property('id').that.is.a('number');\r",
							"    pm.expect(item).to.have.property('titulo').that.is.a('string');\r",
							"    pm.expect(item).to.have.property('fecha').that.is.a('string');\r",
							"    pm.expect(item).to.have.property('cupoMaximo').that.is.a('number');\r",
							"    pm.expect(item).to.have.property('estado').that.is.a('number');\r",
							"  });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/actividad/bydate?fecha=2025-05-10",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"actividad",
						"bydate"
					],
					"query": [
						{
							"key": "fecha",
							"value": "2025-05-10"
						}
					]
				}
			},
			"response": []
		}
	]
}